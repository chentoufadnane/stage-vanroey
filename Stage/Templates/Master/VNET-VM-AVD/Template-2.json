{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        // DC parameters
        "DCName": {
            "type": "string"
        },
        "DCSize": {
            "type": "string"
        },
        "adminNameDC": {
            "type": "String"
        },
        "admninPasswordDC": {
            "type": "String"
        },                                            
        "privateIPDC": {
            "type": "string"
        },

        //Fileserver parameters
        "FSName": {
            "type": "string"
        },
        "FSSize": {
            "type": "string"
        },
        "adminNameFS": {
            "type": "String"
        },
        "admninPasswordFS": {
            "type": "String"
        },            
        "privateIPFS": {
            "type": "string"
        }, 

        //Golden Image parameters
        "GIName": {
            "type": "string"
        },
        "GISize": {
            "type": "string"
        },
        "adminNameGI": {
            "type": "String"
        },
        "admninPasswordGI": {
            "type": "String"
        },            
        "privateIPGI": {
            "type": "string"
        },

        // URL voor ADDS script op storage account                
        "scriptDC-url": {
            "type": "string"
        },
        "scriptVM-url": {
            "type": "string"
        },
        "FSscript": {
            "type": "string"
        },
        "GIscript": {
            "type": "string"
        },
        // Hostpool parameters
        "hostpoolType": {
            "type": "string",
            "allowedValues": [
                "Personal",
                "Pooled"
            ],
            "defaultValue": "Pooled"
        },
        "maxSessionLimit": {
            "type": "int",
            "defaultValue": 2
        },                
        "customRdpProperty": {
            "type": "string",
            "defaultValue": "drivestoredirect:s:*;audiomode:i:0;videoplaybackmode:i:1;redirectclipboard:i:1;redirectprinters:i:1;devicestoredirect:s:*;redirectcomports:i:1;redirectsmartcards:i:1;usbdevicestoredirect:s:*;enablecredsspsupport:i:1;use multimon:i:1;targetisaadjoined:i:1;"
        }                            
    },
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]",

        "DiskEncName": "[concat(resourceGroup().name,'-DiskEncSet')]",

        "NSG-VNet": "[concat(resourceGroup().name,'-NSG')]",
        "virtualNetworkName" : "[concat(resourceGroup().name, '-VNET')]",
        "subnetName" : "[concat(resourceGroup().name, '-SubNET')]",

        "NSG-DC": "[concat(parameters('DCName'),'-NSG')]",         
        "pubIpDC" : "[concat(parameters('DCName'), '-PublicIP')]",
        "nicDCName": "[concat(parameters('DCName'), '-VMNic')]",
        
        "NSG-FS": "[concat(parameters('FSName'),'-NSG')]",         
        "pubIpFS" : "[concat(parameters('FSName'), '-PublicIP')]",
        "nicFSName": "[concat(parameters('FSName'), '-VMNic')]",

        "NSG-GI": "[concat(parameters('GIName'),'-NSG')]",         
        "pubIpGI" : "[concat(parameters('GIName'), '-PublicIP')]",
        "nicGIName": "[concat(parameters('GIName'), '-VMNic')]",

        "LogAnalyticsWorkspaceName" : "[concat(resourceGroup().name, '-LAW')]",        

        "hostpool": "[concat(resourceGroup().name, '-HostPool')]",
        "appGroupName": "[concat(variables('hostpool'),'-DAG')]",
        "workspaceName": "[concat(variables('hostpool'),'-Workspace')]",
        
        "BackupVault": "[concat(resourceGroup().name,'-BackupVault')]",
        "backupPolicyStaAcc": "[concat(variables('BackupVault'),'-PolicyStorageAcc')]",
        "backupPolicyVM": "[concat(variables('BackupVault'),'-PolicyVMs')]"                                                               
    },
    "resources": [
        // Network Security Group voor het Virtual Network
        {
            "name": "[variables('NSG-VNet')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "PermitRDP",
                        "properties": {
                            "description": "description",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        // Network Security Group voor de Domain Controller
        {
            "name": "[variables('NSG-DC')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "PermitRDP",
                        "properties": {
                            "description": "description",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        // Network Security Group voor de Fileserver
        {
            "name": "[variables('NSG-FS')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "PermitRDP",
                        "properties": {
                            "description": "description",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        // Network Security Group voor de Golden Image
        {
            "name": "[variables('NSG-GI')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "PermitRDP",
                        "properties": {
                            "description": "description",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },                
        // PublicIP voor de NIC van de DC
        {
            "name": "[variables('pubIpDC')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSG-DC'))]"
            ]
        },
        // PublicIP voor de NIC van de FS
        {
            "name": "[variables('pubIpFS')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSG-FS'))]"
            ]
        },
        // PublicIP voor de NIC van de GI
        {
            "name": "[variables('pubIpGI')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSG-GI'))]"
            ]
        },                 
        // Virtual Network
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "10.10.10.0/24"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('NSG-VNet'))]"
            ]
        },
        // Network Interface voor de DC
        {
            "name": "[variables('nicDCName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG-DC'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIpDC'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfigDC",
                        "properties": {
                            "privateIPAddress": "[parameters('privateIPDC')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIpDC'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "primary": true
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG-VNet'))]"                    
                }
            }
        },
        // Network Interface voor de FS
        {
            "name": "[variables('nicFSName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG-FS'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIpFS'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfigFS",
                        "properties": {
                            "privateIPAddress": "[parameters('privateIPFS')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIpFS'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "primary": true
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG-VNet'))]"                    
                }
            }
        },
        // Network Interface voor de GI
        {
            "name": "[variables('nicGIName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG-GI'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIpGI'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfigGI",
                        "properties": {
                            "privateIPAddress": "[parameters('privateIPGI')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pubIpGI'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            },
                            "primary": true
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG-VNet'))]"                    
                }
            }
        },                
        // Domain Controller Virtual Machine
        {
            "name": "[parameters('DCName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicDCName'))]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('DCSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('DCName')]",
                    "adminUsername": "[parameters('adminNameDC')]",
                    "adminPassword": "[parameters('admninPasswordDC')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": false,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": false
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "windowsVMDiskDC",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "diskEncryptionSet": {
                                "id": "[resourceId('Microsoft.Compute/diskEncryptionSets', variables('DiskEncName'))]"
                            }
                        },
                        "deleteOption": "Delete"                        
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicDCName'))]",
                            "properties": {
                                "deleteOption": "detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "Microsoft.EnterpriseCloud.MonitoringDC",
                    "apiVersion": "2021-11-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('DCName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspaceName')), '2021-06-01').customerId]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
                        }
                    }
                }
            ]
        },
        // Backup Policy DC
        {
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2022-01-01",
            "name": "[format('{0}/{1}/{2}/{3}', variables('backupVault'), 'Azure', format('iaasvmcontainer;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('DCName')), format('vm;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('DCName')))]",
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[format('{0}/backupPolicies/{1}', resourceId('Microsoft.RecoveryServices/vaults', variables('backupVault')), variables('backupPolicyVM'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('DCName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('DCName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('BackupVault'),variables('backupPolicyVM'))]",
                "[resourceId('Microsoft.Resources/deployments', 'Microsoft.CustomScriptExtension')]"
            ]
        },        
        // Fileserver Virtual Machine
        {
            "name": "[parameters('FSName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicFSName'))]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('FSSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('FSName')]",
                    "adminUsername": "[parameters('adminNameFS')]",
                    "adminPassword": "[parameters('admninPasswordFS')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": false,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": false
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "windowsVMDiskFS",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "diskEncryptionSet": {
                                "id": "[resourceId('Microsoft.Compute/diskEncryptionSets', variables('DiskEncName'))]"
                            }
                        },
                        "deleteOption": "Delete"                        
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicFSName'))]",
                            "properties": {
                                "deleteOption": "detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "Microsoft.EnterpriseCloud.MonitoringFS",
                    "apiVersion": "2021-11-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('FSName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspaceName')), '2021-06-01').customerId]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
                        }
                    }
                }
            ]
        },
        // Backup Policy FS
        {
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2022-01-01",
            "name": "[format('{0}/{1}/{2}/{3}', variables('backupVault'), 'Azure', format('iaasvmcontainer;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('FSName')), format('vm;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('FSName')))]",
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[format('{0}/backupPolicies/{1}', resourceId('Microsoft.RecoveryServices/vaults', variables('backupVault')), variables('backupPolicyVM'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('FSName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('FSName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('BackupVault'),variables('backupPolicyVM'))]",
                "[resourceId('Microsoft.Resources/deployments', 'Microsoft.CustomScriptExtensionFS')]"                
            ]
        },        
        // Golden Image Virtual Machine
        {
            "name": "[parameters('GIName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicGIName'))]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('GISize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GIName')]",
                    "adminUsername": "[parameters('adminNameGI')]",
                    "adminPassword": "[parameters('admninPasswordGI')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": false,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": false
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "office-365",
                        "sku": "win10-21h2-avd-m365",
                        "version": "19044.1586.220308"
                    },
                    "osDisk": {
                        "name": "windowsVMDiskGI",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "diskEncryptionSet": {
                                "id": "[resourceId('Microsoft.Compute/diskEncryptionSets', variables('DiskEncName'))]"
                            }
                        },
                        "deleteOption": "Delete"                        
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicGIName'))]",
                            "properties": {
                                "deleteOption": "detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "Microsoft.EnterpriseCloud.MonitoringGI",
                    "apiVersion": "2021-11-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('GIName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                        "type": "MicrosoftMonitoringAgent",
                        "typeHandlerVersion": "1.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "workspaceId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', variables('LogAnalyticsWorkspaceName')), '2021-06-01').customerId]"
                        },
                        "protectedSettings": {
                            "workspaceKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', variables('LogAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
                        }
                    }
                }
            ]
        },
        // Backup Policy GI
        {
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2022-01-01",
            "name": "[format('{0}/{1}/{2}/{3}', variables('backupVault'), 'Azure', format('iaasvmcontainer;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('GIName')), format('vm;iaasvmcontainerv2;{0};{1}', resourceGroup().name, parameters('GIName')))]",
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[format('{0}/backupPolicies/{1}', resourceId('Microsoft.RecoveryServices/vaults', variables('backupVault')), variables('backupPolicyVM'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('GIName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('GIName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('BackupVault'),variables('backupPolicyVM'))]",
                "[resourceId('Microsoft.Resources/deployments', 'Microsoft.CustomScriptExtensionGI')]"
            ]            
        },        
        // Hostpool aanmaken
        {
            "name": "[variables('hostpool')]",
            "apiVersion": "2021-09-03-preview",
            "type": "Microsoft.DesktopVirtualization/hostpools",
            "location": "[variables('location')]",
            "properties": {
                "customRdpProperty": "[parameters('customRdpProperty')]",
                "hostPoolType": "[parameters('hostpoolType')]",
                "loadBalancerType": "BreadthFirst",
                "preferredAppGroupType": "Desktop",
                "maxSessionLimit": "[parameters('maxSessionLimit')]"
            }

        },
        // Application Group aanmaken
        {
            "name": "[variables('appGroupName')]",
            "apiVersion": "2019-12-10-preview",
            "type": "Microsoft.DesktopVirtualization/applicationgroups",
            "location": "[variables('location')]",
            "properties": {
                "hostpoolarmpath": "[resourceId('Microsoft.DesktopVirtualization/hostpools/', variables('hostpool'))]",
                "friendlyName": "Default Desktop",
                "description": "Desktop Application Group created through the Hostpool Wizard",
                "applicationGroupType": "Desktop"
            },
            "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/hostpools/', variables('hostpool'))]"
            ]
        },
        // Workspace aanmaken
        {
            "type": "Microsoft.DesktopVirtualization/workspaces",
            "apiVersion": "2021-09-03-preview",
            "name": "[variables('workspaceName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', variables('appGroupName'))]"
            ],
            "properties": {
                "applicationGroupReferences": [
                    "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', variables('appGroupName'))]"
                ]
            }
        },                                      
        // Script Extensie dat ADDS installeert
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "Microsoft.CustomScriptExtension",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('DCName'))]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://catalogartifact.azureedge.net/publicartifacts/Microsoft.CustomScriptExtension-arm-2.0.57/MainTemplate.json"
                },
                "parameters": {
                    "fileUris": {
                        "value": "[parameters('scriptDC-url')]"
                    },
                    "vmName": {
                        "value": "[parameters('DCName')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },       
        // Script Extensie dat FSLogix installeert voor de FS
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "Microsoft.CustomScriptExtensionFS",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('FSName'))]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://catalogartifact.azureedge.net/publicartifacts/Microsoft.CustomScriptExtension-arm-2.0.57/MainTemplate.json"
                },
                "parameters": {
                    "fileUris": {
                        "value": "[parameters('scriptVM-url')]"
                    },
                    "vmName": {
                        "value": "[parameters('FSName')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "arguments": {
                        "value": "[concat('-Script ',parameters('FSscript'))]"
                    }                    
                }
            }
        },
        // Script Extensie dat FSLogix installeert voor de GI
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "Microsoft.CustomScriptExtensionGI",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('GIName'))]"
            ],
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "https://catalogartifact.azureedge.net/publicartifacts/Microsoft.CustomScriptExtension-arm-2.0.57/MainTemplate.json"
                },
                "parameters": {
                    "fileUris": {
                        "value": "[parameters('scriptVM-url')]"
                    },
                    "vmName": {
                        "value": "[parameters('GIName')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "arguments": {
                        "value": "[concat('-Script ',parameters('GIscript'))]"
                    }                   
                }
            }
        },                               
        // Backup Vault aanmaken
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2022-01-01",
            "name": "[variables('BackupVault')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {}
        },
        // Backup Policy voor Storage Account
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2022-01-01",
            "name": "[concat(variables('BackupVault'), '/', variables('backupPolicyStaAcc'))]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', variables('BackupVault'))]"
            ],
            "properties": {
                "backupManagementType": "AzureStorage",
                "workloadType": "AzureFileShare",
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-04-14T22:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": "0"
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-04-14T22:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        // Backup Policy voor VMs
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2022-01-01",
            "name": "[concat(variables('backupVault'), '/', variables('backupPolicyVM'))]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', variables('backupVault'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-04-14T22:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-04-14T22:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        }                                   
    ]
}