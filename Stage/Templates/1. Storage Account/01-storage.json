{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageSKU": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ]
        },
        "sku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard",
                "Premium"
            ]
        },
        "accessPolicies": {
            "type": "array"
        },
        "tenantId": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]"
        },
        "KeyType": {
            "type": "string",
            "metadata": {
                "description": "JsonWebKeyType of the key "
            }
        },
        "KeySize": {
            "type": "int",
            "defaultValue": 2048,
            "metadata": {
                "description": "The size in bits of the key to be created."
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": true
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": true
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": true
        },
        "enableRbacAuthorization": {
            "type": "bool",
            "defaultValue": false
        },
        "publicNetworkAccess": {
            "type": "string",
            "defaultValue": true
        },
        "enableSoftDelete": {
            "type": "bool",
            "defaultValue": true
        },
        "softDeleteRetentionInDays": {
            "type": "int"
        },
        "networkAcls": {
            "type": "object"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "storageName": "[concat('arm',uniqueString(resourceGroup().id))]",
        "KeyVaultName": "[concat('arm-KV-',uniqueString(resourceGroup().id))]",
        "KeyName": "[concat(resourceGroup().name,'-KEY-',uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {
                "displayName": "[variables('storageName')]"
            },
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('storageSKU')]"
            }
        },
        {
            "apiVersion": "2021-10-01",
            "name": "[variables('KeyVaultName')]",
            "location": "[variables('location')]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                "accessPolicies": "[parameters('accessPolicies')]",
                "tenantId": "[parameters('tenantId')]",
                "sku": {
                    "name": "[parameters('sku')]",
                    "family": "A"
                },
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "networkAcls": "[parameters('networkAcls')]"
            },
            "tags": {},
            "dependsOn": [
                 "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2021-10-01",
            "name": "[concat(variables('KeyVaultName'), '/', variables('keyName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
            ],
            "properties": {
                "kty": "[parameters('KeyType')]",
                "keySize": "[parameters('KeySize')]"
            }
        }
    ],
    "outputs": {}
}